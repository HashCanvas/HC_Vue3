import {
  init_define_GLOBAL_VAR
} from "./chunk-WJGUHAG5.js";

// dep:js-errorlog-collection
init_define_GLOBAL_VAR();

// node_modules/js-errorlog-collection/index.js
init_define_GLOBAL_VAR();
var jsErrorCollection = ({ runtimeError = true, rejectError = true, consoleError = false }, callback) => {
  if (runtimeError) {
    window.addEventListener("error", ({ error, target }) => {
      var _a;
      if (target.outerHTML) {
        const errLog = `${JSON.stringify(target.outerHTML)}`;
        callback(errLog);
      } else {
        const errLog = `${(_a = error == null ? void 0 : error.stack) == null ? void 0 : _a.substr(0, 300)}`;
        callback(errLog);
      }
    }, true);
  }
  if (rejectError) {
    window.addEventListener("unhandledrejection", ({ reason }) => {
      var _a;
      let errLog = "";
      if (typeof reason === "string") {
        errLog = reason;
      } else {
        errLog = `${(_a = reason == null ? void 0 : reason.stack) == null ? void 0 : _a.substr(0, 300)}`;
      }
      const unhandledCode = "403, 401";
      const unhandledString = "cancel";
      if (!unhandledCode.includes(reason == null ? void 0 : reason.code) && !reason.includes(unhandledString)) {
        callback(errLog);
      }
    });
  }
  if (consoleError) {
    const _oldConsoleError = window.console.error;
    window.console.error = function() {
      const errLog = Object.values(arguments).join(",");
      if (errLog.indexOf("custom") === -1) {
        callback(errLog);
      }
      _oldConsoleError && _oldConsoleError.apply(window, arguments);
    };
  }
};
var js_errorlog_collection_default = {};

// dep:js-errorlog-collection
var js_errorlog_collection_default2 = js_errorlog_collection_default;
export {
  js_errorlog_collection_default2 as default,
  jsErrorCollection
};
//# sourceMappingURL=js-errorlog-collection.js.map
